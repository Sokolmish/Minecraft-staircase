//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Minecraft_staircase {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ResourceHintsEn {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResourceHintsEn() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Minecraft_staircase.ResourceHintsEn", typeof(ResourceHintsEn).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Too large image can not displayed in this view. You can use schematic files..
        /// </summary>
        internal static string BigImageError {
            get {
                return ResourceManager.GetString("BigImageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select layer.
        /// </summary>
        internal static string CrossCurTextBox {
            get {
                return ResourceManager.GetString("CrossCurTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The height of the highest block.
        /// </summary>
        internal static string CrossMaxHeight {
            get {
                return ResourceManager.GetString("CrossMaxHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Next layer.
        /// </summary>
        internal static string CrossNextButton {
            get {
                return ResourceManager.GetString("CrossNextButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Previous layer.
        /// </summary>
        internal static string CrossPrevButton {
            get {
                return ResourceManager.GetString("CrossPrevButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Look at the art on the side (For 3d).
        /// </summary>
        internal static string CrossViewButton {
            get {
                return ResourceManager.GetString("CrossViewButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create flat art.
        /// </summary>
        internal static string FlatRadio {
            get {
                return ResourceManager.GetString("FlatRadio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create 3d art.
        /// </summary>
        internal static string FullRadio {
            get {
                return ResourceManager.GetString("FullRadio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start generating.
        /// </summary>
        internal static string GenerateButton {
            get {
                return ResourceManager.GetString("GenerateButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select height of image.
        /// </summary>
        internal static string HeightTextBox {
            get {
                return ResourceManager.GetString("HeightTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create simple 3d art.
        /// </summary>
        internal static string LiteRadio {
            get {
                return ResourceManager.GetString("LiteRadio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Look at the list of materials.
        /// </summary>
        internal static string MatButton {
            get {
                return ResourceManager.GetString("MatButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Configure the list of used materials.
        /// </summary>
        internal static string MatOptionsButton {
            get {
                return ResourceManager.GetString("MatOptionsButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please, select image. Show additional information about this exception?.
        /// </summary>
        internal static string NoImage {
            get {
                return ResourceManager.GetString("NoImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open new image.
        /// </summary>
        internal static string OpenButton {
            get {
                return ResourceManager.GetString("OpenButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Processing time.
        /// </summary>
        internal static string ProgressTimer {
            get {
                return ResourceManager.GetString("ProgressTimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export schematic file.
        /// </summary>
        internal static string SchemButton {
            get {
                return ResourceManager.GetString("SchemButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checked - size will be in blocks, Else - size will be in maps.
        /// </summary>
        internal static string SizeCheckBox {
            get {
                return ResourceManager.GetString("SizeCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show above another windows.
        /// </summary>
        internal static string TopMost {
            get {
                return ResourceManager.GetString("TopMost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Doubleclick on image to show above another windows (You may disable this message in settings).
        /// </summary>
        internal static string TopTopMostHint {
            get {
                return ResourceManager.GetString("TopTopMostHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Look at the art from the top (For flat).
        /// </summary>
        internal static string TopViewButton {
            get {
                return ResourceManager.GetString("TopViewButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Look at the art in real size (Like image in game).
        /// </summary>
        internal static string ViewImgButton {
            get {
                return ResourceManager.GetString("ViewImgButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select width of image.
        /// </summary>
        internal static string WidthTextBox {
            get {
                return ResourceManager.GetString("WidthTextBox", resourceCulture);
            }
        }
    }
}
